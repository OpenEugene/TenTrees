@inherits ModuleBase

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Ten Trees Module Settings</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="form-group mb-3">
                <label for="defaultLocation" class="form-label">Default Location</label>
                <input type="text" class="form-control" id="defaultLocation" @bind="defaultLocation" />
                <small class="form-text text-muted">Default location description for new trees</small>
            </div>

            <div class="form-group mb-3">
                <label for="defaultLatitude" class="form-label">Default Latitude</label>
                <input type="number" step="0.000001" class="form-control" id="defaultLatitude" @bind="defaultLatitude" />
                <small class="form-text text-muted">Default latitude coordinate for new trees</small>
            </div>

            <div class="form-group mb-3">
                <label for="defaultLongitude" class="form-label">Default Longitude</label>
                <input type="number" step="0.000001" class="form-control" id="defaultLongitude" @bind="defaultLongitude" />
                <small class="form-text text-muted">Default longitude coordinate for new trees</small>
            </div>

            <div class="form-group mb-3">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="enableNotifications" @bind="enableNotifications" />
                    <label class="form-check-label" for="enableNotifications">
                        Enable Monitoring Notifications
                    </label>
                    <small class="form-text text-muted">Send notifications when trees need attention</small>
                </div>
            </div>

            <div class="form-group mb-3">
                <label for="organizationName" class="form-label">Organization Name</label>
                <input type="text" class="form-control" id="organizationName" @bind="organizationName" />
                <small class="form-text text-muted">Name of the organization managing this tree initiative</small>
            </div>

            <button type="button" class="btn btn-primary" @onclick="SaveSettings">Save Settings</button>
        </div>
    </div>
</div>

@code {
    private string? defaultLocation;
    private double? defaultLatitude;
    private double? defaultLongitude;
    private bool enableNotifications = true;
    private string? organizationName;

    protected override async Task OnInitializedAsync()
    {
        if (!UserSecurity.IsAuthorized(User, PermissionNames.Edit, ModuleState.ModuleId))
        {
            return;
        }

        await LoadSettings();
    }

    private async Task LoadSettings()
    {
        try
        {
            var settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
            
            defaultLocation = SettingService.GetSetting(settings, "DefaultLocation", "");
            defaultLatitude = SettingService.GetSetting(settings, "DefaultLatitude", 0.0);
            defaultLongitude = SettingService.GetSetting(settings, "DefaultLongitude", 0.0);
            enableNotifications = SettingService.GetSetting(settings, "EnableNotifications", true);
            organizationName = SettingService.GetSetting(settings, "OrganizationName", "");
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error loading module settings");
        }
    }

    private async Task SaveSettings()
    {
        try
        {
            var settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
            
            SettingService.SetSetting(settings, "DefaultLocation", defaultLocation);
            SettingService.SetSetting(settings, "DefaultLatitude", defaultLatitude);
            SettingService.SetSetting(settings, "DefaultLongitude", defaultLongitude);
            SettingService.SetSetting(settings, "EnableNotifications", enableNotifications);
            SettingService.SetSetting(settings, "OrganizationName", organizationName);
            
            await SettingService.UpdateModuleSettingsAsync(settings, ModuleState.ModuleId);
            await logger.LogInformation("Ten Trees module settings saved successfully");
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await logger.LogError(ex, "Error saving module settings");
        }
    }
}